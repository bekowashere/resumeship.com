# Generated by Django 5.0.2 on 2024-02-17 20:08

import account.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=128, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 50 characters or fewer. Example: john.doe@gmail.com', max_length=254, unique=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff User')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('first_name', models.CharField(blank=True, max_length=32, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=32, verbose_name='Last Name')),
                ('headline', models.CharField(blank=True, max_length=128, null=True, verbose_name='Headline')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=account.models.upload_profile_image, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Profile Picture')),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone Number')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='UserDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Management Information System', max_length=128, null=True, verbose_name='Degree')),
                ('organization_name', models.CharField(blank=True, help_text='Istanbul Bilgi University', max_length=255, null=True, verbose_name='Organization Name')),
                ('organization_url', models.CharField(blank=True, max_length=128, null=True, verbose_name='School Website')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_date', models.CharField(blank=True, help_text='24/06/2016', max_length=16, null=True, verbose_name='Start Date')),
                ('end_date', models.CharField(blank=True, help_text='24/06/2023', max_length=16, null=True, verbose_name='End Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_degrees', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Degree',
                'verbose_name_plural': 'User Degrees',
            },
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Language')),
                ('description', models.TextField(blank=True, help_text='TOEFL, IELTS, C2 e.g...', null=True, verbose_name='Description')),
                ('level', models.IntegerField(choices=[(1, 'Beginner'), (2, 'Elementary '), (3, 'Intermediate '), (4, 'Upper Intermediate'), (5, 'Advanced '), (6, 'Proficient ')], default=1, verbose_name='Level')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_languages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Language',
                'verbose_name_plural': 'User Languages',
            },
        ),
        migrations.CreateModel(
            name='UserPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Backend Developer', max_length=128, null=True, verbose_name='Title')),
                ('company_name', models.CharField(blank=True, help_text='ArtnCode', max_length=255, null=True, verbose_name='Company Name')),
                ('company_url', models.CharField(blank=True, max_length=128, null=True, verbose_name='Company Website')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_date', models.CharField(blank=True, help_text='01/02/2022', max_length=16, null=True, verbose_name='Start Date')),
                ('end_date', models.CharField(blank=True, help_text='01/02/2023', max_length=16, null=True, verbose_name='End Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_positions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Position',
                'verbose_name_plural': 'User Positions',
            },
        ),
        migrations.CreateModel(
            name='UserStrength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Skill Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('level', models.IntegerField(choices=[(1, 'Novice'), (2, 'Beginner'), (3, 'Skillful'), (4, 'Experienced'), (5, 'Expert')], default=5, verbose_name='Level')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_strengths', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Strength',
                'verbose_name_plural': 'User Strengths',
            },
        ),
        migrations.CreateModel(
            name='UserSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Summary')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_summary', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Summary',
                'verbose_name_plural': 'User Summaries',
            },
        ),
    ]
